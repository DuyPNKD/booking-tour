const express = require("express");
require("dotenv").config();
const router = express.Router();
const authMiddleware = require("../middlewares/authMiddleware");
const multer = require("multer");
const path = require("path");
const {
    register,
    login,
    me,
    updateProfile,
    verify,
    resendOtp,
    forgotPassword,
    resetPassword,
    checkResetToken,
    googleLogin,
    refresh,
} = require("../controllers/authController");

router.get("/ping", (req, res) => {
    res.send("Auth route OK");
});

// üìå ƒêƒÉng k√Ω
router.post("/register", register);

// üìå ƒêƒÉng nh·∫≠p
router.post("/login", login);

// üìå L·∫•y th√¥ng tin user t·ª´ token
router.get("/me", authMiddleware, me);

// üìå C·∫≠p nh·∫≠t h·ªì s∆°
router.put("/me", authMiddleware, updateProfile);

// üìå X√°c th·ª±c t√†i kho·∫£n
router.post("/verify", verify);

// üìå Resend OTP
router.post("/resend-otp", resendOtp);
// üìå Qu√™n m·∫≠t kh·∫©u
router.post("/forgot-password", forgotPassword);

// üìå Reset m·∫≠t kh·∫©u
router.post("/reset-password", resetPassword);

// üìå ƒêƒÉng nh·∫≠p v·ªõi Google
router.post("/google", googleLogin);

// üìå Check Reset Token
router.post("/check-reset-token", checkResetToken);

// üìå Refresh token
router.post("/refresh", refresh);

// API upload avatar l√™n Cloudinary
// router.post(
//     "/upload/avatar",
//     authMiddleware, // Ki·ªÉm tra ƒëƒÉng nh·∫≠p, g·∫Øn req.user
//     upload.single("avatar"), // Nh·∫≠n file t·ª´ key "avatar" trong FormData
//     uploadToCloudinary("avatars", {
//         transformation: [{width: 300, height: 300, crop: "fill", gravity: "face"}, {quality: "auto"}],
//     }), // Upload l√™n Cloudinary
//     (req, res) => {
//         // N·∫øu kh√¥ng c√≥ file g·ª≠i l√™n
//         if (!req.file) {
//             return res.status(400).json({success: false, message: "Kh√¥ng c√≥ file ƒë∆∞·ª£c upload"});
//         }

//         // Tr·∫£ v·ªÅ URL ·∫£nh t·ª´ Cloudinary
//         res.json({
//             success: true,
//             path: req.file.cloudinary.secure_url,
//             public_id: req.file.cloudinary.public_id,
//             width: req.file.cloudinary.width,
//             height: req.file.cloudinary.height,
//         });
//     }
// );

module.exports = router;
